[core]
	excludesfile = /Users/calvin/.gitignore
[color]
  ui = auto
[user]
	name = Calvin Kaye
	email = calvin.f.kaye@gmail.com
[includeIf "gitdir:~/Projects/work/"]
  path = ~/Projects/work/.gitconfig
[fetch]
  prune = true
[github]
  user = ckaye
[status]
  showUntrackedFiles = all
[merge]
  tool = opendiff
[push]
  default = simple
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = /Users/calvin/.stCommitMsg
[alias]
  # list aliases
  la = "!git config -l | grep alias | cut -c 7-"

  # tidy branch commits before pushing
  tbr = "rb -i @{upstream}"

  # Clean merged branches
  sweep = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin

  # Get the current branch name
  brn = "!git rev-parse --abbrev-ref HEAD"

  # Push the current branch to the remote "origin", and set it to track the upstream branch
  pub = "!git push -u origin $(git brn)"

  # Git fetch and rebase origin/develop
  rbd = ! git f && git rb origin/develop

  # Git fetch and rebase origin/master
  rbm = ! git f && git rb origin/master

  # Always rebase on collaborative branches rather than merging (preserve maintains merge commits rather than inlining)
  pullrb = "pull --rebase=preserve"

  # Remove local commits (out of order - use git reset --hard for last commit)
  rmc = "!git rebase -i HEAD~$1 #"

  # Git log
  lg = "log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

  # Git log one-line
  lgo = "log --oneline --decorate"

  # Git patch add
  ap = "add -p"

  #Git add all
  aa = add --all

  # Git stash
  temp = stash save -u

  # Git stash list
  sl = stash list

  #Reset hard latest commit
  rh1 = reset HEAD^ --hard

  #Reset soft latest commit
  r1 = reset HEAD^ --soft

  #Diff latest commit
  dlc = diff --cached HEAD^

  #Git checkout
  co = checkout

  #Git checkout new branch
  cob = checkout -b

  #Git status short format
  ss = 'git status -s'

  #Git status
  st = status

  #Git rebase
  rb = rebase

  #Git fetch
  f = fetch

  # reset local branch to remote (untracked files are left untouched)
  rhlo = "!git f && git reset --hard origin/$(git brn)"

  #Git clean untracked files
  cu = clean -f -d
